{"ast":null,"code":"var _jsxFileName = \"/home/kirteemsharma/Desktop/Hackathon/frontend/src/components/ResumeUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResumeUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('/api/resumes', {\n      // Change to your API URL\n      method: 'POST',\n      body: formData,\n      headers: {\n        // add headers if needed, e.g., authorization\n      }\n    }).then(res => res.json()).then(data => alert('Upload successful')).catch(err => alert('Upload failed'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResumeUpload","_s","file","setFile","handleFileChange","e","target","files","handleUpload","formData","FormData","append","fetch","method","body","headers","then","res","json","data","alert","catch","err","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/kirteemsharma/Desktop/Hackathon/frontend/src/components/ResumeUpload.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ResumeUpload() {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    fetch('/api/resumes', { // Change to your API URL\n      method: 'POST',\n      body: formData,\n      headers: {\n        // add headers if needed, e.g., authorization\n      }\n    }).then(res => res.json())\n      .then(data => alert('Upload successful'))\n      .catch(err => alert('Upload failed'));\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload Resume</button>\n    </div>\n  );\n}\n\nexport default ResumeUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACN,IAAI,EAAE;IAEX,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAE7BU,KAAK,CAAC,cAAc,EAAE;MAAE;MACtBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL,QAAQ;MACdM,OAAO,EAAE;QACP;MAAA;IAEJ,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CACxCC,KAAK,CAACC,GAAG,IAAIF,KAAK,CAAC,eAAe,CAAC,CAAC;EACzC,CAAC;EAED,oBACErB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAErB;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD9B,OAAA;MAAQ+B,OAAO,EAAEtB,YAAa;MAAAe,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAC5B,EAAA,CA9BQD,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAgCrB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}